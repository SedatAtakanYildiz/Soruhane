<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnDogruYanlis.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABDFJREFUaEPt
        WV1sFGUU7ZMNmCBPxhDlDUHlQQJqgAeB7i7d3W6M7k7w1cT4RP+L+qIhMbHPJfpgAK2a0MaYkGDS1Da6
        7e5CCZhgk5a0BYz8dIuALQnGUAK9nDt7dpmd3WmbTtmZBk5yMzP357vnzMz37TfZKi8RqovHAtHEMdhP
        ThaMJjp31xobWeIvgNwISMrCFv+GJf4CiO1VciUWSQxYBdRE49+xxP8IRuLbQHpmRQrYHYu/FqhL/EPi
        NwN1xtCKEWC781mduEp8RQgoR179K0KAE3mF7wXMR17hawHmhI0mrpP8rWDEeJ2hArCcfmvGcaRr+RB6
        5/2XMPD3aHBafy13hd97kaEFURM2Xl2IvGJPOBFGj+GaiFFL1/IgFH13s2W5yxmu1c8URyyW/GND6Vod
        bzePFKFxppbAc/K2STeZn3R6xHWW/hnNMwssYO00c7KhWHwTQ5VBKGpstRCYrInse5khEzYR05rPkPfk
        A9F9r6Bx7tHP867rK4GcWyR6XV8nc748em3+DYTjW5heGZD8FAmYpBgqC5uI+zRvyMdisdVoPEkCUzoJ
        GZoXFDHBOrWJipNXbDeMVVjjr4LANX0SdC8K4XC4Ohgz3lbTc7orD21eaQIf/SGrW9LS0JySAdglWBK2
        v/mUrGKKf9GYkY0gewEmZWy8YVA2MNV/qO+RapAcU7JtaZHucZHUpEgXjnpNEecPjsozLPEXmlLyoZJs
        BdmLt6UIet2SfxJp+YAl/gIEdCvBo6NkbcORkZwACDnGEn8Bd/Z3JdjzNxnboH7zCaTkN5b4CyCmq430
        OghQPwUkWfL4oKsJlkKDVrRvcoIvBID4+qa09LFRwfDe9tYnZd6PHiWmuZ4JOJCUFzD4FTaRA5mc5a9h
        l9tOyvNMLwHi3grAwF3a4NOTIuduiDyYy5meq4/Nf2R6CZSY5ngioCkpazHwPW0wNMWOFpzKFprP1p+W
        NSwrghLTHE8EYNA3Obj8d48dLbgDXz7eOCBvsKwIiHn4BNKyi4M7Ih/XXJYVQYlp/MkWsNStrC8EuNnK
        ei7A7VbWcwFut7J+EOBqK+u5ALdbWe8FuCkGngoAdGyNL1VAvwZ/+YvZNpyAX+No3seSImAO7eTgMvuA
        RRbM3i80l5ZB2cGyIiC2dA6YnIc1eOhPZtvQAb/Gmwel7L/mutc347DxGRZZMDbN+pTMfZyRdSwrgisO
        mMS1bCD9V0SwCzah2+G+y4Xm0jogQZaUAAMPaU77WZGb/3MA4AbOv4SPY2SYXgLXHHAHjueTvjiDpRNL
        qh7zPtjPTC2LxrS8hZy7mqsfMl8Pi3wFs3zU3G3OSMl/B1a44tD2qzyLhB8syVbr1H0SUx2BpxBC7pSt
        Vi2LOxxgmiOWg0P+Tn6u7xom52dO+3cnfNIvz+kvNuo7TMO500eMExbHoarqId94JrFoxm/0AAAAAElF
        TkSuQmCC
</value>
  </data>
</root>